# -*- coding: utf-8 -*-
"""1_Remove_Background.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QLm7R7dpMdpSKG5TaG8A0jaj0fRRyW8q
"""





import os

dataset_path = "/content/drive/MyDrive/Tomato disease/Tomato-Dataset"

# Get the list of class directories
classes = os.listdir(dataset_path)

print(f"Total classes: {len(classes)}\n")

# Iterate through each class and count images
for class_name in classes:
    class_path = os.path.join(dataset_path, class_name)
    if os.path.isdir(class_path):
        num_images = len([f for f in os.listdir(class_path) if os.path.isfile(os.path.join(class_path, f))])
        print(f"Class: {class_name}, Images: {num_images}")



"""# Task
Generate Python code to remove the background from images in a dataset.

## Install libraries

### Subtask:
Install necessary libraries for image processing and background removal.

**Reasoning**:
Install the necessary libraries `rembg` and `opencv-python` using pip.
"""

"""## Load images

### Subtask:
Load the images from the dataset.

**Reasoning**:
Load the images and their class labels from the dataset directory structure.
"""

import os
import cv2

dataset_path = "/content/drive/MyDrive/Tomato disease/Tomato-Dataset"

images = []
labels = []

for class_name in os.listdir(dataset_path):
    class_path = os.path.join(dataset_path, class_name)
    if os.path.isdir(class_path):
        for image_name in os.listdir(class_path):
            image_path = os.path.join(class_path, image_name)
            if os.path.isfile(image_path):
                img = cv2.imread(image_path)
                if img is not None:
                    images.append(img)
                    labels.append(class_name)

print(f"Loaded {len(images)} images with labels.")

"""## Apply background removal

### Subtask:
Implement a method to remove the background from each image.

**Reasoning**:
Implement a method to remove the background from each image using the `rembg` library and store the results in a list.
"""

!pip install onnxruntime

"""**Reasoning**:
Now that `onnxruntime` is installed, retry the code to remove the background from the images using `rembg`.


"""

from rembg import remove

processed_images = []

for img in images:
    output_img = remove(img)
    processed_images.append(output_img)

print(f"Processed {len(processed_images)} images.")

"""## Save Processed Images

### Subtask:
Save the processed images to Google Drive, preserving the class structure.

**Reasoning**:
Create a new directory in Google Drive to store the processed images and save each image to the corresponding class subdirectory.
"""

import os
import cv2
from google.colab import drive

# Define the base directory for saving processed images in Google Drive
save_base_dir = "/content/drive/MyDrive/Tomato disease/Processed_Tomato_Dataset"

# Create the base directory if it doesn't exist
if not os.path.exists(save_base_dir):
    os.makedirs(save_base_dir)

# Save each processed image to the appropriate class directory
for i, processed_img in enumerate(processed_images):
    # Get the original class label for the current image
    class_name = labels[i]

    # Create the class directory within the save base directory if it doesn't exist
    save_class_dir = os.path.join(save_base_dir, class_name)
    if not os.path.exists(save_class_dir):
        os.makedirs(save_class_dir)

    # Define the filename for the processed image (you can adjust this if needed)
    # Using a simple index for now, you might want to use original filenames
    save_path = os.path.join(save_class_dir, f"processed_image_{i}.png") # Save as PNG to preserve transparency

    # Save the processed image
    cv2.imwrite(save_path, processed_img)

print(f"Saved {len(processed_images)} processed images to {save_base_dir}")